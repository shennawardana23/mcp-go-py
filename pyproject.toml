[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-pba-tunnel"
version = "1.0.0"
description = "MCP Prompt-Based Architecture Tunnel - Standardized AI-Powered Development Workflows"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "MCP-PBA-TUNNEL Team" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
keywords = [
    "mcp",
    "model-context-protocol",
    "fastapi",
    "prompt-engineering",
    "ai-integration",
    "sqlalchemy",
    "pydantic",
    "celery",
    "redis"
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.25.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0"
]

[project.urls]
Homepage = "https://github.com/your-org/mcp-pba-tunnel"
Repository = "https://github.com/your-org/mcp-pba-tunnel"
Documentation = "https://github.com/your-org/mcp-pba-tunnel/docs"
Issues = "https://github.com/your-org/mcp-pba-tunnel/issues"
Changelog = "https://github.com/your-org/mcp-pba-tunnel/blob/main/CHANGELOG.md"

[project.scripts]
mcp-pba-tunnel = "mcp_pba_tunnel.server.fastapi_mcp_server:create_app"

[tool.hatch.build.targets.wheel]
packages = ["mcp_pba_tunnel"]

[tool.ruff]
line-length = 88
target-version = "py311"
extend-exclude = ["migrations", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]  # assert false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fastapi.*",
    "pydantic.*",
    "sqlalchemy.*",
    "celery.*",
    "redis.*",
    "openai.*",
    "anthropic.*",
    "httpx.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "database: marks tests that require database",
    "ai: marks tests that require AI services"
]
